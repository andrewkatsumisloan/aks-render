/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.3 drawer.glb
*/

import React, { useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'

export function Model(props) {
  const ref = useRef()
  // Hold state for hovered and clicked events
  const [hovered, hover] = useState(false)
  const [clicked, click] = useState(false)

  const { nodes, materials } = useGLTF('/drawer.glb')
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Cube.geometry} material={nodes.Cube.material} position={[-0.98, 2.19, -14.72]} rotation={[-Math.PI, 0, 0]} onPointerOver={(event) => hover(true)}
      onPointerOut={(event) => hover(false)}> <meshStandardMaterial color={hovered ? 'yellow' : 'orange'} /> </mesh>
      <mesh geometry={nodes.Cube001.geometry} material={nodes.Cube001.material} position={[4.53, 4.43, 0.24]} rotation={[-Math.PI, 0, -Math.PI]} onPointerOver={(event) => hover(true)}
      onPointerOut={(event) => hover(false)}> <meshStandardMaterial color={hovered ? 'hotpink' : 'orange'} /> </mesh>
      <mesh geometry={nodes.Cube002.geometry} material={nodes.Cube002.material} position={[-4.57, 4.3, 1.42]} rotation={[-Math.PI, 0, -Math.PI]} onPointerOver={(event) => hover(true)}
      onPointerOut={(event) => hover(false)}> <meshStandardMaterial color={hovered ? 'hotpink' : 'orange'} /> </mesh>
    </group>
  )
}

useGLTF.preload('/drawer.glb')
